values_to = "mortalidad_neonatal"
) %>%
filter(codmpio != "Total general") %>%
mutate(
codmpio = as.numeric(codmpio),
anno = as.numeric(anno)
)
nacidos_vivos <- nacidos_vivos %>%
mutate(
codmpio = as.numeric(codmpio),
anno = as.numeric(anno),
nacimientos = limpiar_numeros(nacimientos)  # Limpieza de valores numéricos
)
# Unir bases de datos
YA_1.7 <- inner_join(nacidos_vivos, YA_1.7, by = c("codmpio", "anno"))
# Calcular la tasa de mortalidad neonatal corregida
YA_1.7 <- YA_1.7 %>%
mutate(
tasa_mortalidad_neonatal = ifelse(
nacimientos > 0 & mortalidad_neonatal <= nacimientos,
(mortalidad_neonatal / nacimientos) * 1000,
NA_real_
),
tasa_mortalidad_neonatal = ifelse(
mortalidad_neonatal == nacimientos & nacimientos == 1,
NA_real_,
tasa_mortalidad_neonatal
)
) %>%
rename(numerador = mortalidad_neonatal, denominador = nacimientos) %>%
select(codmpio, anno, denominador, numerador, tasa_mortalidad_neonatal)
# Crear metadatos
metadatados <- data.frame(
Variables = c("codmpio", "anno", "denominador", "numerador", "tasa_mortalidad_neonatal"),
Descripción = c("Código del municipio", "Año", "Nacimientos", "Muertes neonatales",
"Tasa de mortalidad neonatal por 1,000 nacidos vivos"),
Fuente = rep("…", 5),
Fecha_de_extracción = rep(Sys.Date(), 5)
)
# Guardar datos en Excel sin necesidad de createWorkbook()
write.xlsx(list(datos = YA_1.7, metadatados = metadatados),
file = "C:/Users/enflujo.ARTE-EUFRB00792/Documents/Ninez-YA/03_Process/YA_1.7.xlsx",
colNames = TRUE, overwrite = TRUE)
# Fin del Código
library(dplyr)
library(openxlsx)
library(readxl)
library(tidyr)
library(stringr)
# Función para limpiar valores numéricos eliminando "," y "."
limpiar_numeros <- function(x) {
x <- gsub("[,.]", "", as.character(x))  # Remueve comas y puntos
as.numeric(x)  # Convierte a numérico
}
# Cargar bases de datos
YA_1.9 <- read.xlsx("C:/Users/enflujo.ARTE-EUFRB00792/Documents/Ninez-YA/02_RAW-Data/YA_1.9.xlsx")
total_menores_5 <- read.xlsx("C:/Users/enflujo.ARTE-EUFRB00792/Documents/Ninez-YA/03_Process/menores_5_años.xlsx")
# Limpieza de datos
YA_1.9 <- YA_1.9 %>%
mutate(
codmpio = str_replace(as.character(codmpio), " - .*", ""),
across(starts_with("20"), limpiar_numeros)  # Aplica limpieza a columnas numéricas
) %>%
pivot_longer(cols = starts_with("20"), names_to = "anno", values_to = "mortalidad_desnutricion_5") %>%
mutate(
codmpio = as.numeric(codmpio),
anno = as.numeric(anno)
)
total_menores_5 <- total_menores_5 %>%
mutate(
codmpio = as.numeric(codmpio),
anno = as.numeric(anno),
total_menores_5 = limpiar_numeros(total_menores_5)  # Limpieza de valores numéricos
)
# Unir bases de datos y calcular la tasa
YA_1.9 <- inner_join(total_menores_5, YA_1.9, by = c("codmpio", "anno")) %>%
mutate(
tasa_mortalidad_desnutricion_5 = ifelse(
total_menores_5 > 0 & mortalidad_desnutricion_5 <= total_menores_5,
(mortalidad_desnutricion_5 / total_menores_5) * 100000,
NA_real_
)
) %>%
rename(numerador = mortalidad_desnutricion_5, denominador = total_menores_5) %>%
select(codmpio, anno, denominador, numerador, tasa_mortalidad_desnutricion_5)
# Crear metadatos
metadatados <- data.frame(
Variables = c("codmpio", "anno", "denominador", "numerador", "tasa_mortalidad_desnutricion_5"),
Descripción = c("Código del municipio", "Año", "Total menores de 5 años",
"Muertes por desnutrición", "Tasa de mortalidad por desnutrición en menores de 5 años"),
Fuente = rep("…", 5),
Fecha_de_extracción = rep(Sys.Date(), 5)
)
# Guardar datos en Excel sin necesidad de createWorkbook()
write.xlsx(list(datos = YA_1.9, metadatados = metadatados),
file = "C:/Users/enflujo.ARTE-EUFRB00792/Documents/Ninez-YA/03_Process/YA_1.9.xlsx",
colNames = TRUE, overwrite = TRUE)
# Fin del Código
library(dplyr)
library(openxlsx)
library(readxl)
library(tidyr)
library(stringr)
# Función para limpiar valores numéricos eliminando "," y "."
limpiar_numeros <- function(x) {
x <- gsub("[,.]", "", as.character(x))  # Remueve comas y puntos
as.numeric(x)  # Convierte a numérico
}
# Cargar bases de datos
YA_1.10 <- read.xlsx("C:/Users/enflujo.ARTE-EUFRB00792/Documents/Ninez-YA/02_RAW-Data/tipo_nacimiento.xlsx")
nacidos_vivos <- read.xlsx("C:/Users/enflujo.ARTE-EUFRB00792/Documents/Ninez-YA/03_Process/VF_nacidos_vivos.xlsx")
# Limpieza de datos
YA_1.10 <- YA_1.10 %>%
mutate(
codmpio = str_replace(as.character(codmpio), " - .*", ""),
across(starts_with("20"), limpiar_numeros)  # Aplica limpieza a columnas numéricas
) %>%
pivot_longer(
cols = starts_with("20"),
names_to = "anno",
values_to = "partos_atendidos_calificado"
) %>%
mutate(
codmpio = as.numeric(codmpio),
anno = as.numeric(anno)
)
nacidos_vivos <- nacidos_vivos %>%
mutate(
codmpio = as.numeric(codmpio),
anno = as.numeric(anno),
nacidos_vivos = limpiar_numeros(nacidos_vivos)  # Limpieza de valores numéricos
)
library(dplyr)
library(openxlsx)
library(readxl)
library(tidyr)
library(stringr)
# Función para limpiar valores numéricos eliminando "," y "."
limpiar_numeros <- function(x) {
x <- gsub("[,.]", "", as.character(x))  # Remueve comas y puntos
as.numeric(x)  # Convierte a numérico
}
# Cargar bases de datos
YA_1.10 <- read.xlsx("C:/Users/enflujo.ARTE-EUFRB00792/Documents/Ninez-YA/02_RAW-Data/tipo_nacimiento.xlsx")
nacidos_vivos <- read.xlsx("C:/Users/enflujo.ARTE-EUFRB00792/Documents/Ninez-YA/03_Process/nacidos_vivos.xlsx")
# Limpieza de datos
YA_1.10 <- YA_1.10 %>%
mutate(
codmpio = str_replace(as.character(codmpio), " - .*", ""),
across(starts_with("20"), limpiar_numeros)  # Aplica limpieza a columnas numéricas
) %>%
pivot_longer(
cols = starts_with("20"),
names_to = "anno",
values_to = "partos_atendidos_calificado"
) %>%
mutate(
codmpio = as.numeric(codmpio),
anno = as.numeric(anno)
)
nacidos_vivos <- nacidos_vivos %>%
mutate(
codmpio = as.numeric(codmpio),
anno = as.numeric(anno),
nacidos_vivos = limpiar_numeros(nacidos_vivos)  # Limpieza de valores numéricos
)
library(dplyr)
library(openxlsx)
library(readxl)
library(tidyr)
library(stringr)
# Función para limpiar valores numéricos eliminando "," y "."
limpiar_numeros <- function(x) {
x <- gsub("[,.]", "", as.character(x))  # Remueve comas y puntos
as.numeric(x)  # Convierte a numérico
}
# Cargar bases de datos
YA_1.10 <- read.xlsx("C:/Users/enflujo.ARTE-EUFRB00792/Documents/Ninez-YA/02_RAW-Data/tipo_nacimiento.xlsx")
nacidos_vivos <- read.xlsx("C:/Users/enflujo.ARTE-EUFRB00792/Documents/Ninez-YA/03_Process/VF_nacidos_vivos.xlsx")
# Limpieza de datos
YA_1.10 <- YA_1.10 %>%
mutate(
codmpio = str_replace(as.character(codmpio), " - .*", ""),
across(starts_with("20"), limpiar_numeros)  # Aplica limpieza a columnas numéricas
) %>%
pivot_longer(
cols = starts_with("20"),
names_to = "anno",
values_to = "partos_atendidos_calificado"
) %>%
mutate(
codmpio = as.numeric(codmpio),
anno = as.numeric(anno)
)
nacidos_vivos <- nacidos_vivos %>%
mutate(
codmpio = as.numeric(codmpio),
anno = as.numeric(anno),
nacidos_vivos = limpiar_numeros(nacidos_vivos)  # Limpieza de valores numéricos
)
library(dplyr)
library(openxlsx)
library(readxl)
library(tidyr)
library(stringr)
# Función para limpiar valores numéricos eliminando "," y "."
limpiar_numeros <- function(x) {
x <- gsub("[,.]", "", as.character(x))  # Remueve comas y puntos
as.numeric(x)  # Convierte a numérico
}
# Cargar bases de datos
YA_1.10 <- read.xlsx("C:/Users/enflujo.ARTE-EUFRB00792/Documents/Ninez-YA/02_RAW-Data/tipo_nacimiento.xlsx")
nacidos_vivos <- read.xlsx("C:/Users/enflujo.ARTE-EUFRB00792/Documents/Ninez-YA/03_Process/nacidos_vivos.xlsx")
# Limpieza de datos
YA_1.10 <- YA_1.10 %>%
mutate(
codmpio = str_replace(as.character(codmpio), " - .*", ""),
across(starts_with("20"), limpiar_numeros)  # Aplica limpieza a columnas numéricas
) %>%
pivot_longer(
cols = starts_with("20"),
names_to = "anno",
values_to = "partos_atendidos_calificado"
) %>%
mutate(
codmpio = as.numeric(codmpio),
anno = as.numeric(anno)
)
nacidos_vivos <- nacidos_vivos %>%
mutate(
codmpio = as.numeric(codmpio),
anno = as.numeric(anno),
nacidos_vivos = limpiar_numeros(nacidos_vivos)  # Limpieza de valores numéricos
)
# Función para limpiar valores numéricos eliminando "," y "."
limpiar_numeros <- function(x) {
x <- gsub("[,.]", "", as.character(x))  # Remueve comas y puntos
as.numeric(x)  # Convierte a numérico
}
# Cargar bases de datos
YA_1.8 <- read.xlsx("C:/Users/enflujo.ARTE-EUFRB00792/Documents/Ninez-YA/02_RAW-Data/menores_1_año.xlsx")
nacidos <- read.xlsx("C:/Users/enflujo.ARTE-EUFRB00792/Documents/Ninez-YA/02_RAW-Data/nacidos_vivos.xlsx")
# Eliminar la columna 'Total General' (suponiendo que es la columna 21)
YA_1.8 <- YA_1.8[, -21]
nacidos <- nacidos[, -21]
# Limpieza de datos
View(nacidos)
# Función para limpiar valores numéricos eliminando "," y "."
limpiar_numeros <- function(x) {
x <- gsub("[,.]", "", as.character(x))  # Remueve comas y puntos
as.numeric(x)  # Convierte a numérico
}
# Cargar bases de datos
YA_1.8 <- read.xlsx("C:/Users/enflujo.ARTE-EUFRB00792/Documents/Ninez-YA/02_RAW-Data/menores_1_año.xlsx")
nacidos <- read.xlsx("C:/Users/enflujo.ARTE-EUFRB00792/Documents/Ninez-YA/02_RAW-Data/nacidos_vivos.xlsx")
View(nacidos)
View(YA_1.8)
library(dplyr)
library(openxlsx)
library(readxl)
library(tidyr)
library(stringr)
# Función para limpiar valores numéricos eliminando "," y "."
limpiar_numeros <- function(x) {
x <- gsub("[,.]", "", as.character(x))  # Remueve comas y puntos
as.numeric(x)  # Convierte a numérico
}
# Cargar bases de datos
YA_1.8 <- read.xlsx("C:/Users/enflujo.ARTE-EUFRB00792/Documents/Ninez-YA/02_RAW-Data/menores_1_año.xlsx")
nacidos <- read.xlsx("C:/Users/enflujo.ARTE-EUFRB00792/Documents/Ninez-YA/02_RAW-Data/nacidos_vivos.xlsx")
# Limpieza de datos
YA_1.8 <- YA_1.8 %>%
mutate(
codmpio = str_replace(as.character(codmpio), " - .*", ""),
across(starts_with("20"), limpiar_numeros)  # Aplica limpieza a columnas numéricas
) %>%
pivot_longer(
cols = starts_with("20"),
names_to = "anno",
values_to = "mortalidad_menores_1_año"
) %>%
filter(codmpio != "Total general") %>%
mutate(
codmpio = as.numeric(codmpio),
anno = as.numeric(anno)
)
nacidos <- nacidos %>%
mutate(
codmpio = str_replace(as.character(codmpio), " - .*", ""),
across(starts_with("20"), limpiar_numeros)  # Aplica limpieza a columnas numéricas
) %>%
pivot_longer(
cols = starts_with("20"),
names_to = "anno",
values_to = "nacidos"
) %>%
filter(codmpio != "Total general") %>%
mutate(
codmpio = as.numeric(codmpio),
anno = as.numeric(anno)
)
# Unir bases de datos
YA_1.8 <- inner_join(nacidos, YA_1.8, by = c("codmpio", "anno"))
# Calcular la tasa de mortalidad en menores de 1 año
YA_1.8 <- YA_1.8 %>%
mutate(
tasa_mortalidad_menores_1_año = ifelse(
nacidos > 0 & mortalidad_menores_1_año <= nacidos,
(mortalidad_menores_1_año / nacidos) * 1000,
NA_real_
)
) %>%
rename(numerador = mortalidad_menores_1_año, denominador = nacidos) %>%
select(codmpio, anno, denominador, numerador, tasa_mortalidad_menores_1_año)
# Crear metadatos
metadatados <- data.frame(
Variables = c("codmpio", "anno", "denominador", "numerador", "tasa_mortalidad_menores_1_año"),
Descripción = c("Código del municipio", "Año", "Nacimientos", "Muertes en menores de 1 año",
"Tasa de mortalidad en menores de 1 año por 1,000 nacidos vivos"),
Fuente = rep("…", 5),
Fecha_de_extracción = rep(Sys.Date(), 5)
)
# Guardar datos en Excel sin necesidad de createWorkbook()
write.xlsx(list(datos = YA_1.8, metadatados = metadatados),
file = "C:/Users/enflujo.ARTE-EUFRB00792/Documents/Ninez-YA/03_Process/YA_1.8.xlsx",
colNames = TRUE, overwrite = TRUE)
# Fin del Código
View(YA_1.8)
library(dplyr)
library(openxlsx)
library(readxl)
library(tidyr)
library(stringr)
# Función para limpiar valores numéricos eliminando "," y "."
limpiar_numeros <- function(x) {
x <- gsub("[,.]", "", as.character(x))  # Remueve comas y puntos
as.numeric(x)  # Convierte a numérico
}
# Cargar bases de datos
YA_1.10 <- read.xlsx("C:/Users/enflujo.ARTE-EUFRB00792/Documents/Ninez-YA/02_RAW-Data/tipo_nacimiento.xlsx")
nacidos_vivos <- read.xlsx("C:/Users/enflujo.ARTE-EUFRB00792/Documents/Ninez-YA/03_Process/nacidos_vivos.xlsx")
# Limpieza de datos
YA_1.10 <- YA_1.10 %>%
mutate(
codmpio = str_replace(as.character(codmpio), " - .*", ""),
across(starts_with("20"), limpiar_numeros)  # Aplica limpieza a columnas numéricas
) %>%
pivot_longer(
cols = starts_with("20"),
names_to = "anno",
values_to = "partos_atendidos_calificado"
) %>%
mutate(
codmpio = as.numeric(codmpio),
anno = as.numeric(anno)
)
nacidos_vivos <- nacidos_vivos %>%
mutate(
codmpio = as.numeric(codmpio),
anno = as.numeric(anno)
) %>%
pivot_longer(
cols = starts_with("20"),
names_to = "anno",
values_to = "nacidos_vivos"
) %>%
mutate(
nacidos_vivos = limpiar_numeros(nacidos_vivos)  # Limpieza de valores numéricos
)
# Crear metadatos
metadatados <- data.frame(
Variables = c("codmpio", "anno", "denominador", "numerador", "porcentaje_nacidos_vivos_personal_calificado"),
Descripción = c("Código del municipio", "Año", "Total nacidos vivos",
"Partos atendidos por personal calificado",
"Porcentaje de nacidos vivos atendidos por personal calificado"),
Fuente = rep("…", 5),
Fecha_de_extracción = rep(Sys.Date(), 5)
)
library(dplyr)
library(openxlsx)
library(readxl)
library(tidyr)
library(stringr)
# Función para limpiar valores numéricos eliminando "," y "."
limpiar_numeros <- function(x) {
x <- gsub("[,.]", "", as.character(x))  # Remueve comas y puntos
as.numeric(x)  # Convierte a numérico
}
# Cargar bases de datos
YA_1.10 <- read.xlsx("C:/Users/enflujo.ARTE-EUFRB00792/Documents/Ninez-YA/02_RAW-Data/tipo_nacimiento.xlsx")
nacidos_vivos <- read.xlsx("C:/Users/enflujo.ARTE-EUFRB00792/Documents/Ninez-YA/03_Process/nacidos_vivos.xlsx")
# Limpieza de datos
YA_1.10 <- YA_1.10 %>%
mutate(
codmpio = str_replace(as.character(codmpio), " - .*", ""),
across(starts_with("20"), limpiar_numeros)  # Aplica limpieza a columnas numéricas
) %>%
pivot_longer(
cols = starts_with("20"),
names_to = "anno",
values_to = "partos_atendidos_calificado"
) %>%
mutate(
codmpio = as.numeric(codmpio),
anno = as.numeric(anno)
)
nacidos_vivos <- nacidos_vivos %>%
mutate(
codmpio = as.numeric(codmpio),
anno = as.numeric(anno)
) %>%
pivot_longer(
cols = starts_with("20"),
names_to = "anno",
values_to = "nacidos_vivos"
) %>%
mutate(
nacidos_vivos = limpiar_numeros(nacidos_vivos)  # Limpieza de valores numéricos
)
View(YA_1.10)
print("Columnas en YA_1.10:")
print(colnames(YA_1.10))
print("Columnas en nacidos_vivos:")
print(colnames(nacidos_vivos))
library(dplyr)
library(openxlsx)
library(readxl)
library(tidyr)
library(stringr)
# Función para limpiar valores numéricos eliminando "," y "."
limpiar_numeros <- function(x) {
x <- gsub("[,.]", "", as.character(x))  # Remueve comas y puntos
as.numeric(x)  # Convierte a numérico
}
# Cargar bases de datos
YA_1.10 <- read.xlsx("C:/Users/enflujo.ARTE-EUFRB00792/Documents/Ninez-YA/02_RAW-Data/tipo_nacimiento.xlsx")
nacidos_vivos <- read.xlsx("C:/Users/enflujo.ARTE-EUFRB00792/Documents/Ninez-YA/03_Process/nacidos_vivos.xlsx")
# Imprimir nombres de columnas para verificar estructura
print("Columnas en YA_1.10:")
print(colnames(YA_1.10))
print("Columnas en nacidos_vivos:")
print(colnames(nacidos_vivos))
# Limpieza de datos en YA_1.10
YA_1.10 <- YA_1.10 %>%
mutate(
codmpio = str_replace(as.character(codmpio), " - .*", ""),
partos_atendidos_calificado = limpiar_numeros(partos_atendidos_calificado), # Aplicar limpieza directa
codmpio = as.numeric(codmpio),
anno = as.numeric(anno)
)
View(YA_1.10)
library(dplyr)
library(openxlsx)
library(readxl)
library(tidyr)
library(stringr)
# Función para limpiar valores numéricos eliminando "," y "."
limpiar_numeros <- function(x) {
x <- gsub("[,.]", "", as.character(x))  # Remueve comas y puntos
as.numeric(x)  # Convierte a numérico
}
# Cargar bases de datos
YA_1.10 <- read.xlsx("C:/Users/enflujo.ARTE-EUFRB00792/Documents/Ninez-YA/02_RAW-Data/tipo_nacimiento.xlsx")
nacidos_vivos <- read.xlsx("C:/Users/enflujo.ARTE-EUFRB00792/Documents/Ninez-YA/03_Process/nacidos_vivos.xlsx")
# Limpieza de datos en YA_1.10
YA_1.10 <- YA_1.10 %>%
mutate(
codmpio = str_replace(as.character(codmpio), " - .*", ""),  # Extraer solo el código municipal
codmpio = as.numeric(codmpio)  # Convertir código municipal a numérico
) %>%
pivot_longer(
cols = -codmpio,  # Convertir años en formato largo
names_to = "anno",
values_to = "partos_atendidos_calificado"
) %>%
mutate(
anno = as.numeric(anno),  # Convertir año a numérico
partos_atendidos_calificado = limpiar_numeros(partos_atendidos_calificado)  # Limpieza de valores
)
# Limpieza de datos en nacidos_vivos
nacidos_vivos <- nacidos_vivos %>%
mutate(
codmpio = as.numeric(codmpio),
anno = as.numeric(anno),
nacimientos = limpiar_numeros(nacimientos)  # Limpieza de valores numéricos
)
# Unir bases de datos y calcular la proporción
YA_1.10 <- inner_join(nacidos_vivos, YA_1.10, by = c("codmpio", "anno")) %>%
mutate(
porcentaje_nacidos_vivos_personal_calificado = ifelse(
nacimientos > 0 & partos_atendidos_calificado <= nacimientos,
(partos_atendidos_calificado / nacimientos) * 100,
NA_real_
)
) %>%
rename(numerador = partos_atendidos_calificado, denominador = nacimientos) %>%
select(codmpio, anno, denominador, numerador, porcentaje_nacidos_vivos_personal_calificado)
# Crear metadatos
metadatados <- data.frame(
Variables = c("codmpio", "anno", "denominador", "numerador", "porcentaje_nacidos_vivos_personal_calificado"),
Descripción = c("Código del municipio", "Año", "Total nacidos vivos",
"Partos atendidos por personal calificado",
"Porcentaje de nacidos vivos atendidos por personal calificado"),
Fuente = rep("…", 5),
Fecha_de_extracción = rep(Sys.Date(), 5)
)
# Guardar datos en Excel sin necesidad de createWorkbook()
write.xlsx(list(datos = YA_1.10, metadatados = metadatados),
file = "C:/Users/enflujo.ARTE-EUFRB00792/Documents/Ninez-YA/03_Process/YA_1.10.xlsx",
colNames = TRUE, overwrite = TRUE)
# Fin del Código
View(YA_1.10)
